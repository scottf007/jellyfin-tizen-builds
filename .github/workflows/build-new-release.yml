name: Build New Release

on:
  repository_dispatch:
    types: [build_new_release]

  workflow_dispatch:
  
env:
  TIZEN_STUDIO_VER: 4.5.1
  TIZEN_STUDIO_URL: https://download.tizen.org/sdk/Installer/tizen-studio_$TIZEN_STUDIO_VER/web-cli_Tizen_Studio_$TIZEN_STUDIO_VER_ubuntu-64.bin
  TIZEN_STUDIO_FILE: web-cli_Tizen_Studio_$TIZEN_STUDIO_VER_ubuntu-64.bin

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: env
      
      - name: 'Checkout'
        uses: actions/checkout@v1
        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
      - name: Set Release Label
        uses: haya14busa/action-cond@v1
        id: label
        with:
          cond: ${{ github.event.client_payload.release_label != 0 }}
          if_true: ${{ github.event.client_payload.release_label }}
          if_false: ${{ steps.date.outputs.date }}
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '>=14'
          
      - name: Install Yarn
        run: npm install --global yarn
          
      - name: Install Needed packages
        run: sudo apt install expect
      
      - name: Download Tizen-Studio
        run: |
          curl -o tizen-installer "https://download.tizen.org/sdk/Installer/tizen-studio_${TIZEN_STUDIO_VER}/web-cli_Tizen_Studio_${TIZEN_STUDIO_VER}_ubuntu-64.bin"

      - name: Install Tizen-Studio
        run: |
          chmod +x tizen-installer
          ./tizen-installer --accept-license "${GITHUB_WORKSPACE}/tizen-studio"
          rm ./tizen-installer
          echo 'export PATH=$PATH:/tizen-studio/tools/ide/bin' >> .bashrc
          
      - name: Prepare Tizen Certificate
        run: |
          ./tizen-studio/tools/ide/bin/tizen certificate -a Jellyfin -p 1234 -c NZ -s Aukland -ct Aukland -o Tizen -n Jellyfin -e jellyfin@example.org -f tizencert
          ./tizen-studio/tools/ide/bin/tizen security-profiles add -n Jellyfin -a "${GITHUB_WORKSPACE}/tizen-studio-data/keystore/author/tizencert.p12" -p 1234
          ./tizen-studio/tools/ide/bin/tizen cli-config "profiles.path=${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml"
          chmod 755 "${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml"
        
      - name: Get Latest Jellyfin-vue PreRelease
        id: latest-vue-prereleasee
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: jellyfin
          repo: jellyfin-vue
          excludes: release, draft
    
      - name: Clone jellyfin-tizen
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: 'jellyfin/jellyfin-tizen'
          platform: 'github'
          path: 'jellyfin-tizen'
          
      - name: Clone jellyfin-vue Master
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: 'jellyfin/jellyfin-vue'
          platform: 'github'
          path: 'jellyfin-vue-master'
          
      - name: Clone jellyfin-vue
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: 'jellyfin/jellyfin-vue'
          platform: 'github'
          path: 'jellyfin-vue'
          ref: ${{ steps.latest-vue.outputs.release }}
          
      - name: Clone jellyfin-vue PreRelease
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: 'jellyfin/jellyfin-vue'
          platform: 'github'
          path: 'jellyfin-vue-prerelease'
          ref: ${{ steps.latest-vue-prereleasee.outputs.release }}
          
      - name: Build jellyfin-vue Master
        run: |
          cd jellyfin-vue-master
          SKIP_PREPARE=1 npm ci --no-audit
          npm run build:production
          
      - name: Build jellyfin-vue
        run: |
          cd jellyfin-vue
          SKIP_PREPARE=1 npm ci --no-audit
          npm run build:production
          
      - name: Build jellyfin-vue PreRelease
        run: |
          cd jellyfin-vue-prerelease
          SKIP_PREPARE=1 npm ci --no-audit
          npm run build:production
          
      - name: Build jellyfin-tizen Master
        id: buildMaster
#         continue-on-error: true
        run: |
          cd jellyfin-tizen
          JELLYFIN_VUE_DIR=../jellyfin-vue-master/dist npm ci --no-audit

      - name: Build Master
        if: success() || steps.buildMaster.conclusion == 'success'
        run: |
          cd jellyfin-tizen
          ../tizen-studio/tools/ide/bin/tizen build-vue -out .buildResult-master -e ".*" -e gulpfile.js -e README.md -e "node_modules/*" -e "package*.json" -e "yarn.lock"
          
      - name: Build jellyfin-tizen Release
        id: buildRelease
#         continue-on-error: true
        run: |
          cd jellyfin-tizen
          JELLYFIN_VUE_DIR=../jellyfin-vue/dist npm ci --no-audit

      - name: Build
        if: success() || steps.buildRelease.conclusion == 'success'
        run: |
          cd jellyfin-tizen
          ../tizen-studio/tools/ide/bin/tizen build-vue -e ".*" -e gulpfile.js -e README.md -e "node_modules/*" -e "package*.json" -e "yarn.lock"
          
      - name: Build jellyfin-tizen PreRelease
        id: buildPreRelease
#         continue-on-error: true
        run: |
          cd jellyfin-tizen
          rm -rf www
          JELLYFIN_VUE_DIR=../jellyfin-vue-prerelease/dist npm ci --no-audit

      - name: Build PreRelease
        if: success() || steps.buildPreRelease.conclusion == 'success'
        run: |
          cd jellyfin-tizen
          ../tizen-studio/tools/ide/bin/tizen build-vue -out .buildResult-prerelease -e ".*" -e gulpfile.js -e README.md -e "node_modules/*" -e "package*.json" -e "yarn.lock"
          
      - name: Prepare for password prompt
        if: success() || steps.buildMaster.conclusion == 'success'
        run: |
          sed -i "s|${GITHUB_WORKSPACE}/tizen-studio-data/keystore/author/tizencert.pwd|1234|g" ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
          sed -i "s|${GITHUB_WORKSPACE}/tizen-studio-data/tools/certificate-generator/certificates/distributor/tizen-distributor-signer.pwd|tizenpkcs12passfordsigner|g" ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
          sed -i 's|password=""|password="tizenpkcs12passfordsigner"|g' ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
          
      - name: Package WGT Master
        if: success() || steps.buildMaster.conclusion == 'success'
        run: |
          expect ./package-master.exp
          mv ./jellyfin-tizen/master/Jellyfin.wgt ./jellyfin-tizen/master/Jellyfin-master.wgt 
          
      - name: Prepare for password prompt
        if: success() || steps.buildRelease.conclusion == 'success'
        run: |
          sed -i "s|${GITHUB_WORKSPACE}/tizen-studio-data/keystore/author/tizencert.pwd|1234|g" ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
          sed -i "s|${GITHUB_WORKSPACE}/tizen-studio-data/tools/certificate-generator/certificates/distributor/tizen-distributor-signer.pwd|tizenpkcs12passfordsigner|g" ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
          sed -i 's|password=""|password="tizenpkcs12passfordsigner"|g' ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
          
      - name: Package WGT
        if: success() || steps.buildRelease.conclusion == 'success'
        run: |
          expect ./package.exp
          
      - name: Prepare for password prompt
        if: success() || steps.buildPreRelease.conclusion == 'success'
        run: |
          sed -i "s|${GITHUB_WORKSPACE}/tizen-studio-data/keystore/author/tizencert.pwd|1234|g" ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
          sed -i "s|${GITHUB_WORKSPACE}/tizen-studio-data/tools/certificate-generator/certificates/distributor/tizen-distributor-signer.pwd|tizenpkcs12passfordsigner|g" ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
          sed -i 's|password=""|password="tizenpkcs12passfordsigner"|g' ${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml
      
      - name: Package WGT PreRelease
        if: success() || steps.buildPreRelease.conclusion == 'success'
        run: |
          expect ./package-pre.exp
          mv ./jellyfin-tizen/prerelease/Jellyfin.wgt ./jellyfin-tizen/prerelease/Jellyfin-prerelease.wgt 
          
      - name: Print logs
        if: always()
        run: cat ./tizen-studio-data/cli/logs/cli.log
        
      - name: List All Files
        if: always()
        run: ls -R
          
      - name: Release Build Result
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.label.outputs.value }}
          files: |
            jellyfin-tizen/release/Jellyfin.wgt
            jellyfin-tizen/prerelease/Jellyfin-prerelease.wgt
            jellyfin-tizen/master/Jellyfin-master.wgt
          body: "${{ github.event.client_payload.data.rawMd }}## Normal Version\nJellyfin-Vue: [${{ github.event.client_payload.data.vueRelease.name }}](${{ github.event.client_payload.data.vueRelease.url }})  \n## PreRelease Version\nJellyfin-vue: [${{ github.event.client_payload.data.vuePreRelease.name }}](${{ github.event.client_payload.data.vuePreRelease.url }})  \n## Master Version\nJellyfin-vue: [master](https://github.com/jellyfin/jellyfin-vue)"
